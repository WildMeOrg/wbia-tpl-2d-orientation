import matplotlib.pyplot as plt
import numpy as np

# x = np.arange(0,4*np.pi,0.1)
# y = np.sin(x)

# plt.plot(x,y)
# plt.title('Angle Rotation Using Unit Vector Component Sin')
# plt.xlabel('Angle in Radians')
# plt.ylabel('Unit Vector Component')
# plt.show()

# x = np.arange(0,4*np.pi,0.1)
# y = (x*180/np.pi)
# y = np.where(y>360,y-360,y)
# y = y-180

# plt.plot(x,y)
# plt.title('Angle Rotation Using a Single Output Î¸')
# plt.xlabel('Angle in Radians')
# plt.ylabel('Rotation in Degrees')
# plt.yticks(np.arange(-180,181,step=45))
# plt.show()

# ===================================

all_diff = [2.4583740234375, 0.13848876953125, 1.2057304382324219, 1.9220046997070312, 0.634429931640625, 0.4071044921875, 1.7841796875, 0.54888916015625, 2.3044891357421875, 0.49176025390625, 2.3760986328125, 1.8074493408203125, 0.275390625, 6.0831298828125, 1.618133544921875, 0.852783203125, 0.46462249755859375, 3.6235885620117188, 1.1817626953125, 0.3181610107421875, 0.35687255859375, 3.5180015563964844, 26.41889190673828, 2.295501708984375, 0.4535369873046875, 0.202239990234375, 0.52142333984375, 0.2180004119873047, 2.576751708984375, 1.9674072265625, 5.449432373046875, 1.060882568359375, 1.6855144500732422, 2.6428985595703125, 5.05401611328125, 3.975738525390625, 3.6961212158203125, 1.1099395751953125, 1.2656402587890625, 2.763519287109375, 1.924774169921875, 3.7316436767578125, 0.2851066589355469, 0.331512451171875, 0.0932769775390625, 0.1450958251953125, 36.25994873046875, 0.8679962158203125, 1.16680908203125, 0.02651214599609375, 0.16404342651367188, 1.53875732421875, 3.73492431640625, 0.212738037109375, 1.3660516738891602, 2.692626953125, 0.276123046875, 1.79345703125, 2.396514892578125, 0.7890090942382812, 2.422698974609375, 0.46026611328125, 0.3124237060546875, 0.3054351806640625, 0.1989898681640625, 0.3315086364746094, 1.723480224609375, 2.27825927734375, 3.6480712890625, 0.436248779296875, 1.35052490234375, 1.2551803588867188, 2.82598876953125, 3.9319915771484375, 1.4234132766723633, 0.43121337890625, 2.298004150390625, 1.29571533203125, 7.429901123046875, 1.004425048828125, 1.6019058227539062, 1.586883544921875, 0.19305419921875, 0.86273193359375, 1.4051513671875, 0.866302490234375, 2.4037513732910156, 0.9731941223144531, 2.64984130859375, 0.40702056884765625, 0.888092041015625, 3.5548095703125, 0.6265525817871094, 0.3838920593261719, 1.8700237274169922, 0.8464174270629883, 7.9720458984375, 0.2597503662109375, 1.514984130859375, 1.1167182922363281, 1.3697357177734375, 2.624237060546875, 0.511016845703125, 1.1594171524047852, 1.2856063842773438, 1.9842758178710938, 5.5021514892578125, 2.441986083984375, 0.5258026123046875, 1.80657958984375, 0.61981201171875, 2.956085205078125, 0.8437652587890625, 1.861964225769043, 0.30322265625, 1.2182464599609375, 4.6258544921875, 0.17329025268554688, 0.093536376953125, 1.52618408203125, 0.4974212646484375, 0.03558349609375, 2.6154937744140625, 0.807830810546875, 2.1139488220214844, 1.592376708984375, 0.8379974365234375, 0.40411376953125, 1.257171630859375, 1.081756591796875, 2.2330322265625, 4.355072021484375, 0.4518771171569824, 0.3221435546875, 1.208740234375, 2.2736053466796875, 3.3062591552734375, 1.6346588134765625, 0.7573394775390625, 3.013317346572876, 1.8863525390625, 2.1791839599609375, 0.135498046875, 2.843852996826172, 0.633026123046875, 6.165740966796875, 0.17863082885742188, 25.612045288085938, 0.1391448974609375, 2.881500244140625, 0.4660453796386719, 0.8631935119628906, 34.01234817504883, 1.7182846069335938, 0.66534423828125, 2.2617950439453125, 1.1108760833740234, 1.002410888671875, 2.2101593017578125, 1.84326171875, 1.3743209838867188, 2.7861175537109375, 0.265533447265625, 3.01953125, 1.3416123390197754, 0.13582324981689453, 5.963134765625, 3.61566162109375, 1.4912109375, 1.2940673828125, 1.36370849609375, 1.693084716796875, 1.755117416381836, 0.823944091796875, 1.4389142990112305, 2.3909912109375, 1.55072021484375, 0.431640625, 1.71392822265625, 2.88970947265625]
bins_def = np.arange(max(360,np.max(all_diff)))
# # hist,bins = np.histogram(all_diff,bins = bins_def)
# # plt.text(100,50,'mean: {:3f}\nmedian: {:3f}'.format(np.mean(all_diff),np.median(all_diff)))

# f, (ax, ax2) = plt.subplots(2, 1, sharex=True)
# ax.hist(all_diff,bins_def)
# ax2.hist(all_diff,bins_def)
# ax.set_ylim(max(all_diff)-100, max(all_diff))  # outliers only
# ax2.set_ylim(0, 100)  # most of the data
# plt.show()

# =======

hist,bins = np.histogram(all_diff,bins = bins_def)

f, axis = plt.subplots(2, 1, sharex=True)
axis[0].hist(all_diff,bins_def)
axis[1].hist(all_diff,bins_def)
axis[0].set_ylim(max(hist)-max(hist)*.2, max(hist)+max(hist)*.1)
axis[1].set_ylim(0, max(hist)*.2)
axis[1].legend().set_visible(False)

axis[0].spines['bottom'].set_visible(False)
axis[1].spines['top'].set_visible(False)
# axis[0].xaxis.tick_top()
# axis[0].tick_params(labeltop='off')
axis[1].xaxis.tick_bottom()
d = .015
kwargs = dict(transform=axis[0].transAxes, color='k', clip_on=False)
axis[0].plot((-d,+d),(-d,+d), **kwargs)
axis[0].plot((1-d,1+d),(-d,+d), **kwargs)
kwargs.update(transform=axis[1].transAxes)
axis[1].plot((-d,+d),(1-d,1+d), **kwargs)
axis[1].plot((1-d,1+d),(1-d,1+d), **kwargs)
axis[0].xlabel("Title")
plt.show()